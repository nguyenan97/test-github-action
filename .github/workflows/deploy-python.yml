# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net..
#

name: Build and Deploy CommonDataModel to QC

on:
  push:
    branches: ["main"]
env:
  
  BUILD_NAME: "TimerTrigger2"
  ARTIFACT_NAME: "TimerTrigger2"
  AZURE_APP_NAME: "TimerTrigger2"
  PUBLIC_PROFILE_KEY: ${{secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE}}
  FUNCTION_CODE: ${{secrets.FUNCTION_CODE}}
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' 
  PYTHON_VERSION: "3.10"

jobs:
  build_and_deploy:
    name: Build And Deploy
    runs-on: ubuntu-latest # For Linux, use ubuntu-latest

    environment: staging
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v3

      - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
  

      - name: 'Resolve Project Dependencies Using Pip'
        shell: bash
        run: |
            pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
            python -m pip install --upgrade pip
            pip install -r requirements.txt --target=".python_packages/lib/site-packages"
            popd
      
      - name: Deploy to Function App
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
              app-name: ${{env.AZURE_APP_NAME}}
              publish-profile: ${{ env.PUBLIC_PROFILE_KEY }}
              package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{env.ARTIFACT_NAME}}-${{ github.run_number }}
      #     path: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment: 
  #       name: 'staging'
  #       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}    
        

  #   steps:     
  #     - name: Download artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: ${{env.ARTIFACT_NAME}}-${{ github.run_number }}
  #         path: ./artifact

  #     - name: Display structure of downloaded files
  #       run: ls -R
  #       working-directory: ./artifact

      # - name: Extract artifact
      #   run: unzip aep-portal-${{ github.run_number }}.zip -d extracted-artifact
